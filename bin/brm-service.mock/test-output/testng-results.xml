<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="346" started-at="2015-04-26T18:23:15Z" finished-at="2015-04-26T18:23:15Z">
    <groups>
      <group name="CRUD">
        <method signature="UsuarioSeviceMockTest.create(br.com.brm.scp.api.dto.request.UsuarioRequestDTO, br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="create" class="br.com.brm.scp.api.service.test.UsuarioSeviceMockTest"/>
        <method signature="UsuarioSeviceMockTest.delete(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="delete" class="br.com.brm.scp.api.service.test.UsuarioSeviceMockTest"/>
        <method signature="UsuarioSeviceMockTest.find(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="find" class="br.com.brm.scp.api.service.test.UsuarioSeviceMockTest"/>
        <method signature="UsuarioSeviceMockTest.update(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="update" class="br.com.brm.scp.api.service.test.UsuarioSeviceMockTest"/>
      </group> <!-- CRUD -->
    </groups>
    <test name="Default test" duration-ms="346" started-at="2015-04-26T18:23:15Z" finished-at="2015-04-26T18:23:15Z">
      <class name="br.com.brm.scp.api.service.test.UsuarioSeviceMockTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="7" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-04-26T15:23:15Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:319)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [br.com.brm.scp.api.mockdata.MockData] for bean with name 'mockData' defined in class path resource [META-INF/application-context.xml]; nested exception is java.lang.ClassNotFoundException: br.com.brm.scp.api.mockdata.MockData
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1328)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:622)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:591)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1397)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:968)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:735)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:121)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 29 more
Caused by: java.lang.ClassNotFoundException: br.com.brm.scp.api.mockdata.MockData
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:249)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:395)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1349)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1320)
	... 42 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="setup" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="create(br.com.brm.scp.api.dto.request.UsuarioRequestDTO, br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="create" duration-ms="1" started-at="2015-04-26T15:23:15Z" data-provider="novoUsuarioRequest" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.request.UsuarioRequestDTO@616c5f1a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.request.UsuarioRequestDTO@11d7d5ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.UsuarioSeviceMockTest.create(br.com.brm.scp.api.dto.request.UsuarioRequestDTO,br.com.brm.scp.api.dto.request.UsuarioRequestDTO) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="update(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="update" duration-ms="1" started-at="2015-04-26T15:23:15Z" data-provider="updateAndFindUsuarioNotFound" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.request.UsuarioRequestDTO@5839f7bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.UsuarioSeviceMockTest.update(br.com.brm.scp.api.dto.request.UsuarioRequestDTO) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="find(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="find" duration-ms="1" started-at="2015-04-26T15:23:15Z" data-provider="updateAndFindUsuarioNotFound" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.request.UsuarioRequestDTO@3094e3c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.UsuarioSeviceMockTest.find(br.com.brm.scp.api.dto.request.UsuarioRequestDTO) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="delete(br.com.brm.scp.api.dto.request.UsuarioRequestDTO)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="delete" duration-ms="0" started-at="2015-04-26T15:23:15Z" data-provider="updateAndFindUsuarioNotFound" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.request.UsuarioRequestDTO@7482742d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.UsuarioSeviceMockTest.delete(br.com.brm.scp.api.dto.request.UsuarioRequestDTO) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:br.com.brm.scp.api.service.test.UsuarioSeviceMockTest@2ecca280]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-04-26T15:23:15Z" finished-at="2015-04-26T15:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- br.com.brm.scp.api.service.test.UsuarioSeviceMockTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
