<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="33644" started-at="2015-07-03T01:34:21Z" finished-at="2015-07-03T01:34:55Z">
    <groups>
      <group name="CRIACAO_SKU">
        <method signature="SkuServiceMockTest.criarSkuPart1(br.com.brm.scp.api.dto.response.ItemResponseDTO, java.util.Collection)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="criarSkuPart1" class="br.com.brm.scp.api.service.test.SkuServiceMockTest"/>
        <method signature="SkuServiceMockTest.criarSkuPart2()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="criarSkuPart2" class="br.com.brm.scp.api.service.test.SkuServiceMockTest"/>
        <method signature="SkuServiceMockTest.skuExistenteException()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="skuExistenteException" class="br.com.brm.scp.api.service.test.SkuServiceMockTest"/>
      </group> <!-- CRIACAO_SKU -->
    </groups>
    <test name="Default test" duration-ms="33644" started-at="2015-07-03T01:34:21Z" finished-at="2015-07-03T01:34:55Z">
      <class name="br.com.brm.scp.api.service.test.SkuServiceMockTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="8" started-at="2015-07-02T22:34:21Z" finished-at="2015-07-02T22:34:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="408" started-at="2015-07-02T22:34:21Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-07-02T22:34:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="setup" is-config="true" duration-ms="18" started-at="2015-07-02T22:34:22Z" finished-at="2015-07-02T22:34:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-07-02T22:34:22Z" finished-at="2015-07-02T22:34:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.criarSkuPart1(br.com.brm.scp.api.dto.response.ItemResponseDTO,java.util.Collection) throws br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="criarSkuPart1(br.com.brm.scp.api.dto.response.ItemResponseDTO, java.util.Collection)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="criarSkuPart1" duration-ms="32" started-at="2015-07-02T22:34:22Z" data-provider="ITEM_TAGS_RANDOM" finished-at="2015-07-02T22:34:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[br.com.brm.scp.api.dto.response.ItemResponseDTO@65fe9e33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[br.com.brm.scp.api.dto.response.TagResponseDTO@18bc345, br.com.brm.scp.api.dto.response.TagResponseDTO@42f8285e, br.com.brm.scp.api.dto.response.TagResponseDTO@26bab2f1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- criarSkuPart1 -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-07-02T22:34:22Z" finished-at="2015-07-02T22:34:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.criarSkuPart1(br.com.brm.scp.api.dto.response.ItemResponseDTO,java.util.Collection) throws br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="criarSkuPart2()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="criarSkuPart2" duration-ms="33" started-at="2015-07-02T22:34:23Z" finished-at="2015-07-02T22:34:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- criarSkuPart2 -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-07-02T22:34:23Z" finished-at="2015-07-02T22:34:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.criarSkuPart2() throws br.com.brm.scp.api.exceptions.SkuNotFoundException,br.com.brm.scp.api.exceptions.UsuarioNotFoundException,br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-07-02T22:34:23Z" finished-at="2015-07-02T22:34:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.criarSkuPart2() throws br.com.brm.scp.api.exceptions.SkuNotFoundException,br.com.brm.scp.api.exceptions.UsuarioNotFoundException,br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="skuExistenteException()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="skuExistenteException" duration-ms="32354" started-at="2015-07-02T22:34:23Z" finished-at="2015-07-02T22:34:55Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception br.com.brm.scp.api.exceptions.SkuExistenteException but got org.testng.TestException: 
Method SkuServiceMockTest.skuExistenteException()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad] should have thrown an exception of class br.com.brm.scp.api.exceptions.SkuExistenteException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception br.com.brm.scp.api.exceptions.SkuExistenteException but got org.testng.TestException: 
Method SkuServiceMockTest.skuExistenteException()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad] should have thrown an exception of class br.com.brm.scp.api.exceptions.SkuExistenteException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: org.testng.TestException: 
Method SkuServiceMockTest.skuExistenteException()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad] should have thrown an exception of class br.com.brm.scp.api.exceptions.SkuExistenteException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 16 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skuExistenteException -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-07-02T22:34:23Z" finished-at="2015-07-02T22:34:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.skuExistenteException() throws br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-07-02T22:34:55Z" finished-at="2015-07-02T22:34:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void br.com.brm.scp.api.service.test.SkuServiceMockTest.skuExistenteException() throws br.com.brm.scp.api.exceptions.SkuExistenteException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-07-02T22:34:55Z" finished-at="2015-07-02T22:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:br.com.brm.scp.api.service.test.SkuServiceMockTest@618b19ad]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-07-02T22:34:55Z" finished-at="2015-07-02T22:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- br.com.brm.scp.api.service.test.SkuServiceMockTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
